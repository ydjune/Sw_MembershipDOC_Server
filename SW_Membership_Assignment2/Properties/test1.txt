


 




과제명 : 기어2를 이용한 카메라 원격 제어 Application
























 
 
과 제 명	기어2를 이용한 카메라 원격 제어 Application
과제구분	단기과제
과제기간	2015. 01.26 ~ 2015.02.16      (3주)
지    역	부산 멤버십	참여인원	4명

회 원 명	학교	학과	학년	연락처	E-mail
류천우	울산대학교	컴퓨터정보통신공학과	4	010-9340-8891	na1000woo@nate.com
박성준	부산대학교	정보컴퓨터공학부	4	010-2727-1793	Qkr9990@naver.com
김정한	부산외국어대학교	컴퓨터공학과	3	010-7612-0451	Junghan2503@naver.com
박기림	동의대학교	컴퓨터공학과	4	010-5033-8679	Pclim@naver.com

구분	내용
개발 목적
및 동기	배경이 나오는 사진을 촬영하는 사용자가 누군가에게 촬영을 부탁하면 자신이 원하는 구도가 아닌 다른 구도로 촬영을 해주는 경우가 많아 만족스러운 결과가 나타나기 어려울 수 있다. 그리고 셀프 카메라 거치대를 통하여 촬영할 경우 1m내외의 근거리 촬영이므로 인물위주의 사진이 촬영되어 배경이 포함되는 사진을 촬영할 때에는 거리적인 한계가 존재한다. 이를 보안하기 위해 스마트 시계를 사용하여 개발한다.
개발 환경
및 일정	-   운영체제 : Windows7, Android 4.4 KitKat
-   개발 툴  : Eclipse , Tizen wearable IDE, Arduino Sketch
-   개발언어 : C, Java, JavaScript, HTML, CSS
-   개발일정 : 2015. 01.26 ~ 2015.02.16 (3주)
창의성/
우수성	주변인에게 촬영을 부탁 할 필요 없이 Android 기기와 기어2가 통신을 통하여 사용자가 원하는 대로 사진을 찍을 수 있다. 그리고 기존의 사진 미리보기를 제공할 때 구도를 제공하여 보다 나은 촬영을 도와준다.
활용성/
사업성	기존에 상용화 되어있는 원격 카메라 제어기들은 별도의 디바이스 혹은 모듈이 필요하지만, 해당 Application이 설치된 스마트 워치만 있으면 어디서든 카메라 제어가 가능 하도록 해준다. 
지원부서	S/W멤버십	기술지원 연구원	
전화번호		E-Mail	
 

- 내용 목차 -
1. 개발 목적	5
1) 기존의 사진 촬영법	5
2) 기존의 셔터 방식	6
3) 기어2를 통한 구도 확인 및 촬영	6
2. 개발 목표	6
1) Tizen	6
(1) Android 와 Tizen과의 통신	6
(2) Tizen – Android Streaming receive	7
2) Android	7
(1)	1:2 Bluetooth 통신	7
(2)	카메라 Open CV	8
3) 삼각대	9
(1)	모터 제어	9
3. 개발 내용	10
1) 전체 시스템 아키텍처	10
2) Software Architecture	11
3) Hardware Architecture	12
4) 시나리오	13
4. 개발 일정	16
5. 용어 정리	16


- 그림 목차 –
그림 1 촬영구도가 맞지 않는 단체사진	5
그림 2 실시간으로 하는 센서 값 확인	6
그림 3 1:2 Bluetooth 통신의 예	7
그림 4 Open CV를 이용한 사진 효과	8
그림 5 히스토그램을 이용한 평활화 효과	9
그림 6 삼각대 구성요소	9
그림 7 System Architecture	10
그림 8 Software Architecture	11
그림 9 Hardware Architecture	12
그림 10	12
그림 11	12
그림 12	13
그림 13	13
그림 14	14
그림 15	14
그림 16	15
그림 17	15
그림 18	16
그림 19	16
그림 20	16
그림 21	16
그림 22 개발 일정	17

1. 개발 목적
1) 기존의 사진 촬영법
 
그림 1 촬영구도가 맞지 않는 단체사진

위의 사진은 단체사진을 찍으면서 흔히 일어날수 있는 장면이다. 단체 사진 촬영 시 촬영자 포함 모두가 사진에 촬영되어야 할 때 보통 촬영자가 삼각대 또는 카메라를 지지할 수 있는 곳에 타이머를 설정하고 촬영하게 된다. 타이머 설정을 너무 짧게 할 때, 촬영자가 사진에 포함되기 위해 촬영준비를 하다가 촬영이 될 수 있다
단체 사진을 촬영하고 난 뒤 모든 사람이 사진 안에 들어왔는지 확인하기 위해 카메라 쪽으로 가서 촬영 결과를 확인하고, 사진이 만족스럽게 촬영되지 못하였을 경우 다시 위의 과정을 반복하게 된다. 또한, 단체로 점프하며 사진촬영 등 특별한 포즈를 취하여 촬영 시 타이머를 사용하게 되는데, 보통의 카메라들은 현재 타이머의 시간이 나타나지 않아 사진 촬영 시 만족스럽지 못한 결과를 보여주게 되고, 그 결과물을 즉시 확인하지 못하고, 재 촬영 시에 일정시간 소요된다.
또한 여행의 경우, 혼자 또는 모두가 나오는 사진, 배경이 나오는 사진을 촬영하는 것은 누군가에게 부탁하여 촬영할 때가 많을 것 이다. 하지만, 국내가 아닌 타지일 경우 언어적 어려움이 있을 수 있으며, 누군가 사진을 촬영하면 자신이 원하는 구도가 아닌 다른 구도로 촬영을 해주는 경우가 많아 만족스러운 결과가 나타나기 어려울 수 있다.

2) 사진 촬영을 보조하는 새로운 아이디어
최근 스마트 폰 거치대와 스마트 폰을 통하여 셀프 카메라를 찍어주는 보조도구(‘셀카봉’)의 유행으로 사용자가 스마트 폰을 거치대에 연결하여 촬영버튼을 누르거나 Bluetooth 리모컨을 통해 촬영하게 된다. 거치대를 통하여 촬영할 경우 1m 내외의 근거리 촬영이므로 인물위주의 사진이 촬영되어 배경이 포함되는 사진을 촬영할 때에는 거리적인 한계가 존재하고, 구도가 한정적이다.

3) 원격 촬영이 필요한 상황에서 활용방안
카메라의 촬영을 보조하기 위해 근거리에서 촬영을 도와주는 리모컨 이나 사용자의 미소를 인식하여 촬영하는‘스마일 셔터’기능이 있는 카메라도 있지만, 단체 촬영 시, 점프샷 등 사용자의 얼굴을 인식하기 힘든 상황에서는 기능을 활용하지 못한다. 또한, 셔터를 누르는 역할만 보조하게 되며, 촬영된 결과를 즉시 볼 수 있는 기능은 없어 효과적이지 못하다. 
본 프로젝트에서는 Tizen 기반의 기어2와 Android Device와 Bluetooth 통신, MCU인 Arduino와 bluetooth모듈이 장착된 삼각대와 Bluetooth 통신을 통하여, 기어2에서 조작만으로 삼각대를 조절하여 단체•여행 사진 촬영 시 사진에 모두 포함되게, 자신이 원하는 사진 장면으로 촬영이 가능할 것이다. 또한 결과물을 즉시 기어2의 디스플레이를 통한 확인으로 재촬영 시 시간 소요를 줄일 수 있고, 향후 Android 또는 Tizen기반의 스마트 카메라의 보조도구로 사용자에게 편리함을 제공할 수 있을 것이다.

2. 개발 목표
1) Tizen
(1) Android 와 Tizen과의 통신
 
그림 2 실시간으로 하는 센서 값 확인

SAP(Samsung Accessory Protocol)는 Wi-Fi나 Bluetooth로 Host Device와 Accessory 기기(Gear 2 등)을 연결할 수 있는 환경을 제공한다. 쌍방향 통신으로 Android와 기어2간에 요구를 충족한다.
(2) Tizen – Android Streaming receive
먼저 기어 2에서 현재 시간의 구도를 Android에게 요청한 후 해당 시간의 화면을 기어 Application 화면에서 확인한다. 이후 기어 Application 화면에서 사용자가 기어 Application의 갱신버튼이나 구도 이동을 실행하게 되면 이를 통해 변경된 촬영화면상태를 한 프레임씩 전송 받을 수 있는 방식으로 구현 할 것이다.
 
2) Android
(1)	 1:2 Bluetooth 통신
 
그림 3 1:2 Bluetooth 통신의 예

우리가 사용 할 기어2와 Android 폰 그리고 삼각대에는 통신방법으로는 Bluetooth 통신을 사용한다. 상호간의 통신 프로토콜에는 SAP(Samsung Accessary Protocol)을 사용하고, Android Device과 삼각대의 Arduino 통신은 SDP(Service Discovery Protocol)프로토콜을 기반으로 한 SPP(Serial Port Profile)통신을 사용한다. 이처럼 두 개의 다른 프로토콜을 사용하지만 서로 다른 프로토콜끼리의 통신은 하지 않는다. Android Application에서는 두 개의 Thread를 사용하여 각각의 연결된 소켓의 정보를 가지고 있으며, 다른 통신을 원하면 각자의 소켓을 이용하는 방식으로 통신한다.
기어2와 Android 폰 끼리 통신하기 위해서는 삼성에서 기본으로 제공하는 Galaxy Apps 제공 Application인 Gear Manager의 API를 사용한다. Gear Manager의 SAP 통신을 Android device의 Service로 동작하게 하고, 동시에 Activity에서 다른 Thread를 만들어 SPP 통신을 하게 된다.
삼각대와 자동 Bluetooth Pairing을 위해서는 삼각대의 Arduino에 Bluetooth 모듈로 들어갈 FB155BC라는 이름을 등록된 적이 있던 목록에서 검색하여 있으면 자동연결이 되도록 한다.
(2)	 NFC를 통한 Bluetooth Pairing
 
그림 4 차량용 NFC 스마트폰 거치대

위의 장면은 NFC를 이용한 차량용 스마트 폰 거치대 이다. NFC기능을 탑재해 스마트폰을 거치대에 올리기만 하면 자동으로 네비게이션 Application이 실행된다. Android Device에서 사용자가 삼각대에 Device를 거치하고 Application을 실행한다면 사용자가 해당 Application을 찾기 힘들거나, Application을 터치를 통해 실행시키기 힘든 상황이 있을 수 있다. 위의 거치대를 착안하여,NFC(Near Field Communication)통신을 통한다면 사용자의 번거로움을 줄일 수 있다. 48byte~8kb NFC Tag에 실행할 Camera Application의 패키지 명을 기록하고, 사용자는 NFC Tag에 접촉함으로써 별도의 과정 없이 Camera Application을 실행 할 수 있다. Android에서 NFC는 Application 실행을 도와주는 기능 이외에 Wi-Fi, GPS, 진동/무음 설정, 밝기 조정 등 Device 제어 및 향후 5.0 버전에서는 NFC를 통한 잠금 풀기 등 여러 가지 기능을 지원한다. 
현재 많이 사용되고 있는 Android 폰 중 대다수가 GingerBread(2.3.x)버전 이상이기 때문에 NFC기능이 내장되어있고, 최근 출시되는 Android 스마트 폰 대부분 NFC기능이 탑재되어 출시 되고 있다. 이러한 과정으로 사용자는 NFC(P2P)기능을 켠 상태로 NFC Tag의 접촉만으로 복잡한 과정 없이 Application을 실행 할 수 있다.   
3) 삼각대
(1)	 모터 제어
 
그림 5 삼각대 구성요소

기어에서 구도를 확인 한 후 Android Device를 움직이기 위해 기어에서 방향을 제어한다. Android Device에서 Bluetooth Module이 장착된 MCU에게 상, 하, 좌, 우 방향전환명령을 내리게 된다.
MCU(Arduino Nano)는 Android Device와 Bluetooth 통신을 하면서 어떤 방향인지 명령을 받아 일정한 각도로 방향을 전환하게 된다.
상하 방향전환은 기존의 한 방향만 출력하는 Servo Motor와 다르게 로봇의 관절을 담당하는 높은 출력의 Servo Motor를 사용하여 0~180도까지 Android Device를 거치하는 파트의 브라켓을 움직여 위쪽에서 위-아래 또는 좌-우로 보는 구도로 촬영이 가능하게 한다.
Servo Motor로 채택한 MRS-D2009SP는 6V로 동작하기 때문에 Arduino Nano에서 출력되는 낮은 전류의 5V의 전압으로 사용하기에는 무리가 있다. 따라서 외부 전압을 사용하여 충분한 전류원을 공급 받으며 가변저항을 사용해 속도를 조절한다. MCU와 Servo Motor의 연결 회로도는 [그림 7]과 같다.

 
그림 6 삼각대 회로도 구성

(2)	 Android – Arduino Bluetooth 통신
Arduino의 Bluetooth 모듈로는 1:N Bluetooth 통신을 지원하는 FB755AC를 사용하지 않고1:1 Bluetooth 통신을 지원하는 FB155BC를 사용한다. 그리고 SPP 통신을 지원해줘 PC 등과의 사용자 인터페이스에 관련된 장치에서 물리적인 시리얼 포트를 블루투스 통신을 사용해 무선상으로 대체해준다.
Android Device에서 SPP의 UUID를 정의하고 이 UUID를 이용해 Arduino와의 Socket을 만들게 되면 Android Device와 Arduino는 가상의 Serial Port를 가지게 되고 Bluetooth를 통한 Serial 통신을 하게 된다. MCU와 FB155BC의 연결 회로도는 [그림 7]과 같다.

3. 개발 내용
1) 전체 시스템 아키텍처
 
그림 7 System Architecture

전체적인 시스템 구성도이다. 모든 시스템의 데이터 처리는 Android Device를 기반으로 Bluetooth 통신을 이용한다.
Android Device에서 카메라 어플리케이션을 실행한 뒤, 기어에서도 카메라 Application을 실행하게 되면 카메라 영상데이터를 Renewal방식으로 전송해주어 스마트 시계에서 촬영구도를 실시간으로 확인할 수가 있다. 촬영을 하기 전에 기어 Application을 통해, 줌인, 줌 아웃을 통해 촬영구도를 조정할 수 있고, Android Device로 촬영을 하게 되면 사진정보를 바로 기어에서 확인이 가능하며, 저장 및 재촬영 옵션을 선택 할 수가 있다. 
스마트 삼각대를 기어로 조종하여 촬영구도를 재설정 할 수 있는 하드웨어를 제작한다. 기어 Application에서 삼각대 조종 옵션을 선택한 뒤 방향 스크롤로 움직이게 되면, Bluetooth 통신을 통해 Android Device를 거쳐 삼각대에 설치된 MCU에 데이터를 보내 X, Y축으로 스마트폰 촬영방향을 제어 할 수가 있게 된다.
2) Software Architecture
 
그림 8 Software Architecture

소프트웨어 구성도이다. 기어에 탑재된 Tizen OS위에 구현한 어플리케이션을 설치한다. 어플리케이션은 TIZEN SDK를 기반으로, Bluetooth SAP 통신을 통해 Android Device와 데이터 송수신을 하게 되고, Time API를 통해 타이머 기능, File System API를 통해 사진을 받아오는 갤러리 기능, Content 기능을 통해 받아온 사진을 해상도에 맞게 보여 줄 수 있도록 기능을 구현한다. Tizen Application의 기능으로는 Camera API를 사용하여 원거리에서 찍을 수 있는 셔터, 저장되거나 찍은 사진을 확인 할 수 있는 갤러리를 구현하고, 일정 시간 타이머를 설정 후 진동으로 알려주는 타이머 기능, 삼각대의 스마트폰을 방향을 제어하는 모터 컨트롤, 결과사진을 꾸밀 수 있는 사진효과, 그리고 Streaming 혹은 Renewal 방식으로 Android Device의 카메라 영상정보를 받아오는 리얼타임 카메라 기능이 있다.
Android Device에서는 Android SDK를 기반으로, 기어와 통신 할 수 있는 Bluetooth SAP 통신, 삼각대의 MCU와 통신 할 수 있는 SPP 통신, 그리고 카메라 API를 사용한다. 또한 Open CV를 통해, 찍은 사진에 특수효과를 적용할 수 있도록 구현한다. Android 카메라 Application의 기능으로는 기기 양쪽간의 통신을 위해 Bluetooth Connect 기능, 기어에 카메라 영상을 전송하는 Real-time 카메라 기능, 찍은 사진을 바로 전송하여 기어로 보여주는 사진 보내기 기능이 있다.

3) Hardware Architecture
 
그림 9 Hardware Architecture

하드웨어 구성도이다. 기어의 입력된 데이터가 Android Device를 거쳐 삼각대에 설치된 MCU에 Bluetooth SPP 통신을 통해 데이터 값을 받아오게 된다. 데이터 값을 바탕으로 X, Y축으로 스마트폰을 상하좌우 방향 제어를 하게 된다. 전원부는 5A/12V Relay를 사용하여 모터 움직임을 제어하고, DC DC 벅 모듈을 사용하여 전압을 조정한다.



4) 시나리오
	 

(1)	  스마트 삼각대에 Android Device를 설치한 모습이다. 설치 시 NFC 태그를 통해 자동으로 Bluetooth Pairing과 Android 카메라 셔터 Application을 실행시키고 Smart Watch와의 Connection을 대기한다. 



  

(2)	  Android Device의 카메라 Application을 실행하여 기어 Application과 connection을 대기 한다.
 

   
(3)	  왼쪽 그림은 Smart Watch의 Application을 실행하여 카메라 Application과의 connection을 대기하는 화면이다. 오른쪽 그림은 connection이 성공하게 되면 그 시점에서의 사진을 보여준다. 

 
   
(4)	  왼쪽 그림은 Smart Watch의 화면 갱신 버튼이다. 오른쪽 그림은 메뉴 창을 보기 위해 화면을 클릭하는 모습이다.


 
   

(5)	  왼쪽 그림은 Smart Watch의 main 버튼들이다. 왼쪽부터 세부 기능 메뉴, 사진 저장, 끝내기 기능을 가진다. 오른쪽 그림은 세부 기능 메뉴를 보기 위해 화면을 클릭하는 모습이다.

 

   
(6)	  왼쪽 그림은 세부 메뉴 기능들인 삼각대의 카메라 이동, 타이머, 화면 Zoom In, 프리뷰 리스트 버튼이다. 오른쪽 그림은 화면 이동버튼을 클릭하는 모습이다.



 

   
(7)	  왼쪽 그림은 화면 이동 버튼을 클릭한 이후 활성화된 화면이다. 상하좌우로 방향버튼이 생성된다. 오른쪽 그림은 화면 이동버튼을 클릭하는 모습이다.


 
   
(8)	  왼쪽 그림은 화면이동 후 마지막으로 화면 갱신버튼을 눌러주는 모습이다. 갱신버튼을 누르지 않더라도 움직임마다 현재 카메라에 보이는 화면을 보여준다. 오른쪽 그림은 화면 이동 기능을 비활성화 시키기 위해 다른 화면을 클릭하는 모습이다.

 
(9)	  왼쪽 그림은 타이머 버튼 클릭 후 확인 할 수 있는 초 단위이다. 3초, 5초, 10초, cancel 버튼으로 구성하였다. 오른쪽 그림은 시간 설정을 마친 후 진행화면이다.
화면 갱신 버튼을 클릭하게 되면 오른쪽상단에 선택한 타임이 표기가 되고 타임에 맞게 화면을 갱신한다. 3초 이하로는 진동으로 시간을 추가적으로 알려준다.

 
   
(10)	  왼쪽 그림은 타이머가 끝난 후 화면 저장 유무를 묻는 팝업 창이 생성된다.
오른쪽 그림은 Zoom In 버튼이다. 1배, 1.2배, 1.5배. 2배로 확인할 수 있다.
 
   
(11)	왼쪽 그림은 2배 버튼을 클릭하였을 때 보이는 화면이다. 오른쪽 그림은 프리뷰 리스트 버튼이다.
.

 

(12)	  왼쪽 그림은 프리뷰 리스트 버튼을 클릭하였을 때 보이는 화면이다. Application을 실행 후 저장된 사진들을 확인할 수 있다. 위쪽의 모서리에서 밑으로 드래그를 화면 해당화면을 종료할 수 있다. 오른쪽 그림은 저장버튼이다.
 

(13)	  왼쪽 그림은 저장 버튼 선택 후 저장 여부를 선택하는 화면이다. 왼쪽그림은 해당 Application 종료 버튼이다.

4. 개발 일정
항목	점수
1. Smart Watch
(1) 촬영 시 Android 카메라 영상 수신			3
(2) 진동 타이머	2
(3) Smart Watch UI	2
(4) 삼각대 조정	2
(5) 사진 찍은 시점부터 다시 보기 갤러리	1
(6) 사진 확대 및 축소	1
합계	11
2. Android Application
(1) Surface view를 이용한 카메라 Application 구현	3
(2) 사진 찍은 시점부터 다시 보기 갤러리 데이터 처리	2
(3) NFC로 Application 구동 및 Bluetooth 자동실행	1
(4) Android UI	2
합계	8
3. Bluetooth Communication
(1) Tizen-Android 통신(SAP 통신)	3
(2) Android-MCU 통신(SDP를 이용한 SPP 통신)	3
(3) MCU 시리얼 통신	2
합계	8
4. Tripod
(1) X, Y 축 Servo Motor	2
(2) 방향조절 모듈 및 전원 부 구현	1
(3) 방향조절 모듈 삼각대 병합	3
합계	6
총점	35

 
그림 22 개발 일정

5. 용어 정리
- SAP(Samsung Accessory Protocol) : SAP는 호스트와 웨어러블 기기 간 연결을 
제공하고 Wi-Fi, Bluetooth, LE(Bluetooth Low Energy)와 같은 다양한 연결 기술을 지원
하는 프로토콜이다. 액세서리는 액세서리 기기들을 삼성 스마트 기기에 연결하도록 해준
다. 액세서리를 사용하면, 액세서리와 스마트 기기 간 새로운 서비스를 정의할 수 있게
되며, 따라서 액세서리 기기로부터 다양한 스마트 기기 기능을 사용할 수 있게 된다.
서비스는 다양한 연결 환경에 호환되어 있고 액세서리 개발을 효율적이고 편리하게 
할 수 있게 한다. 액세서리 패키지를 사용하여 음악 볼륨 조절과 같은 스마트 기기 원격
제어, 알림 전달이나 알람을 제공하고, 스마트 기기의 정확한 위치를 찾을 수 있으며, 
사용자 정의 기능도 실행할 수 있다.

- SPP(Serial Port Profile) : SPP는 Bluetooth를 사용하는 두 장치를 연결하는 가상 
직렬 포트를 구성하고 연결한다. 기존의 직렬케이블을 사용하던 어플리케이션을 별도의 변환과 수정 없이 Bluetooth장치에서 사용할 수 있도록 한다. SPP는 5개의 프로토콜을 사용하는데 이중 RFCOMM이라는 프로토콜을 통해 데이터,제어 신호, 설정 명령 등을 전송하며, 직렬포트를 가상적으로 운용한다.

